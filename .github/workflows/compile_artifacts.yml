name: Gnalc Compile Artifacts

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

permissions:
  contents: write

on:
  push:
    branches: [ "main", "backendv3.0" ]
    paths:
      - 'lib/**'
      - 'include/**'
      - 'test/**'
      - 'CMakeLists.txt'
      - '.github/workflows/compile_artifacts.yml'
      - '.github/workflows/backend-test.yml'
  pull_request:
    branches: [ "main", "backendv3.0" ]
    paths:
      - 'lib/**'
      - 'include/**'
      - 'test/**'
      - 'CMakeLists.txt'
      - '.github/workflows/compile_artifacts.yml'
      - '.github/workflows/backend-test.yml'

env:
  BUILD_TYPE: Release
  ARTIFACTS_BRANCH: "artifacts-${{ github.ref_name }}"
  TESTDATA_VERSION: "v1.0.0"
  TESTDATA_ZIP_URL: "https://github.com/caozhanhao/gnalc-test-data/releases/download/v1.0.0/testdata.zip"
  TESTDATA_DIR: "${{ github.workspace }}/testdata"
  ZIP_CACHE_DIR: "${{ github.workspace }}/testdata_cache"
  ARTIFACTS_COMMIT_THRESHOLD: 10

jobs:
  compile:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout artifacts branch
        uses: actions/checkout@v4
        with:
          ref: ${{ env.ARTIFACTS_BRANCH }}
          path: artifacts-branch

      - name: Reset artifacts branch if too many commits
        run: |
          cd artifacts-branch
          COMMIT_COUNT=$(git rev-list --count HEAD)
          echo "Artifacts branch has $COMMIT_COUNT commits"
          
          if [ $COMMIT_COUNT -gt ${{ env.ARTIFACTS_COMMIT_THRESHOLD }} ]; then
            echo "Resetting artifacts branch (more than ${{ env.ARTIFACTS_COMMIT_THRESHOLD }} commits)"
          
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git checkout --orphan new_branch_for_github_action
            git add -A
            git commit -m "History reset $(TZ=Asia/Shanghai date +'%Y-%m-%d %H:%M:%S')"
          
            git branch -D ${{ env.ARTIFACTS_BRANCH }}
            git branch -m ${{ env.ARTIFACTS_BRANCH }}
          
            git push --force origin ${{ env.ARTIFACTS_BRANCH }}
            echo "Artifacts branch has been reset"
          else
            echo "No reset needed (<=${{ env.ARTIFACTS_COMMIT_THRESHOLD }} commits)"
          fi

      - name: Compare commit SHA
        run: |
          LAST=$(cat artifacts-branch/last_run.txt 2>/dev/null || echo "")
          echo "Previous run SHA: $LAST"
          echo "Current SHA:  ${{ github.sha }}"
          
          if [ "$LAST" = "${{ github.sha }}" ]; then
            echo "This commit (${{ github.sha }}) has already been processed. Skipping build."
            exit 0
          fi

          echo "New commit detected. Proceeding with build."

      - name: Checkout source
        uses: actions/checkout@v4

      - name: Create cache directory
        run: mkdir -p ${{ env.ZIP_CACHE_DIR }}

      - name: Cache test data
        id: cache-zip
        uses: actions/cache@v3
        with:
          path: ${{ env.ZIP_CACHE_DIR }}/testdata.zip
          key: testcases-zip-${{ env.TESTDATA_VERSION }}
          restore-keys: testcases-zip-

      - name: Download test data zip (if not cached)
        if: steps.cache-zip.outputs.cache-hit != 'true'
        run: |
          curl -L -o ${{ env.ZIP_CACHE_DIR }}/testdata.zip ${{ env.TESTDATA_ZIP_URL }}

      - name: Extract testcases
        run: |
          mkdir -p ${{ env.TESTDATA_DIR }}
          unzip -q ${{ env.ZIP_CACHE_DIR }}/testdata.zip -d ${{ env.TESTDATA_DIR }}

      - name: Configure CMake
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} ..

      - name: Build gnalc
        run: make -C build gnalc -j$(nproc)

      - name: Prepare artifacts directory
        run: |
          mkdir -p artifacts
          echo "ARTIFACTS_DIR=$(pwd)/artifacts" >> $GITHUB_ENV

      - name: Set compile options
        id: set-options
        run: echo "COMPILE_OPTIONS=-O1" >> $GITHUB_ENV

      - name: Compile testcases
        run: |
          base_path="${{ env.TESTDATA_DIR }}"
          find "$base_path" -type f -name "*.sy" | while read testcase; do
            rel_path="${testcase#$base_path/}"
            dir_path=$(dirname "$rel_path")
            test_name=$(basename "$testcase" .sy)
               
            if [[ "$dir_path" == *"bad_tests"* ]]; then
               continue
            fi

            mkdir -p "$ARTIFACTS_DIR/artifacts/llvm/$dir_path"
            mkdir -p "$ARTIFACTS_DIR/artifacts/aarch64/$dir_path"

#            ./build/gnalc --log none -S "$testcase" -emit-llvm \
#              -o "$ARTIFACTS_DIR/artifacts/llvm/$dir_path/$test_name.ll" \
#              ${{ env.COMPILE_OPTIONS }}

            ./build/gnalc --log none -S "$testcase" \
              -o "$ARTIFACTS_DIR/artifacts/aarch64/$dir_path/$test_name.s" \
              ${{ env.COMPILE_OPTIONS }}
          done

      - name: Checkout artifacts branch for update
        uses: actions/checkout@v4
        with:
          ref: ${{ env.ARTIFACTS_BRANCH }}
          path: artifacts-branch

      - name: Clean out old artifacts
        run: |
          rm -rf artifacts-branch/*

      - name: Copy new artifacts
        run: |
          cp -R artifacts/* artifacts-branch/

      - name: Generate metadata files
        run: |
          TS=$(TZ=Asia/Shanghai date +"%Y-%m-%dT%H:%M:%S%:z")
          cat > artifacts-branch/README.md <<EOF
          # Gnalc Artifacts

          - **Branch:** ${{ github.ref_name }}
          - **Generated at:** $TS (UTC)
          - **Commit SHA:** ${{ github.sha }}

          Artifacts built by GitHub Actions.  
          EOF

          echo "${{ github.sha }}" > artifacts-branch/last_run.txt

      - name: Commit & Push updates
        run: |
          cd artifacts-branch
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add README.md last_run.txt artifacts/
          if git diff-index --quiet HEAD; then
            echo "No changes to commit"
          else
            git commit -m "Update artifacts from ${{ github.sha }}"
            git push origin ${{ env.ARTIFACTS_BRANCH }} 
          fi
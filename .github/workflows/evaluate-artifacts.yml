name: Gnalc Evaluate Artifacts

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string

concurrency:
  group: evaluate-artifacts-${{ inputs.branch }}
  cancel-in-progress: true

permissions:
  contents: write

env:
  BUILD_TYPE: Release
  TESTDATA_VERSION: "v1.0.0"
  TESTDATA_ZIP_URL: "https://github.com/caozhanhao/gnalc-test-data/releases/download/v1.0.0/testdata.zip"
  TESTDATA_DIR: "${{ github.workspace }}/testdata"
  ZIP_CACHE_DIR: "${{ github.workspace }}/testdata_cache"
  ARTIFACTS_BRANCH: "artifacts-${{ inputs.branch }}"
  TEST_RESULT_BRANCH: "test-result-${{ inputs.branch }}"

jobs:
  test_changes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout artifacts branch
        uses: actions/checkout@v4
        with:
          ref: ${{ env.ARTIFACTS_BRANCH }}
          fetch-depth: 1

      - name: Get test files
        id: test-files
        run: |
          find artifacts/ -type f > test_files.txt
          grep -E 'artifacts/(llvm|aarch64)/.*\.(ll|s)$' test_files.txt > filtered_files.txt
          
          FILE_COUNT=$(wc -l < filtered_files.txt)
          echo "Detected $FILE_COUNT artifact files"
          echo "file_count=$FILE_COUNT" >> $GITHUB_OUTPUT
          
          echo "files=$(cat filtered_files.txt | jq -R -s -c 'split("\n") | map(select(. != ""))')" >> $GITHUB_OUTPUT

      - name: Skip if no relevant files found
        if: steps.test-files.outputs.file_count == '0'
        run: |
          echo "No relevant files found, skipping tests"
          exit 0

      - name: Cache test data
        id: cache-zip
        uses: actions/cache@v3
        with:
          path: ${{ env.ZIP_CACHE_DIR }}/testdata.zip
          key: testcases-zip-${{ env.TESTDATA_VERSION }}
          restore-keys: testcases-zip-

      - name: Download test data zip (if not cached)
        if: steps.cache-zip.outputs.cache-hit != 'true'
        run: |
          mkdir -p ${{ env.ZIP_CACHE_DIR }}
          curl -L -o ${{ env.ZIP_CACHE_DIR }}/testdata.zip ${{ env.TESTDATA_ZIP_URL }}

      - name: Extract testcases
        run: |
          mkdir -p ${{ env.TESTDATA_DIR }}
          unzip -q ${{ env.ZIP_CACHE_DIR }}/testdata.zip -d ${{ env.TESTDATA_DIR }}

      - name: Checkout Main branch
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 1
          path: main

      - name: Configure CMake
        run: |
          mkdir main/build
          cd main/build
          cmake -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} ..

      - name: Build ghaction
        run: make -C main/build ghaction -j$(nproc)

      - name: Setup LLVM
        uses: ZhongRuoyu/setup-llvm@v0
        with:
          llvm-version: 18

      - name: Run tests and save results
        id: run-tests
        run: |
          cat filtered_files.txt | main/build/test/ghaction -d ${{ env.TESTDATA_DIR }} \
              --sha "${{ github.sha }}" \
              --report "test_report.md" \
              --sylib main/test/sylib/sylib.c

      - name: Checkout test-result branch
        uses: actions/checkout@v4
        with:
          ref: ${{ env.TEST_RESULT_BRANCH }}
          path: test-result-branch

      - name: Update README with test results
        run: |
          cd test-result-branch

          if [ ! -f README.md ]; then
            echo "Github Action Test Result Branch - ${{ github.ref_name }}" > README.md
            echo "" >> README.md
          fi

          {
            cat ../test_report.md
            echo ""
            echo "---"
            echo ""
            cat README.md
          } > README_new.md

          mv README_new.md README.md

      - name: Commit and push to test-result branch
        run: |
          cd test-result-branch
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          git add README.md
          git commit -m "Add test results for artifacts commit ${{ github.sha }}"
          
          git push origin ${{ env.TEST_RESULT_BRANCH }}
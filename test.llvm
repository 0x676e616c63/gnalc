; Module: ./test/contest/functional/65_color.sy

@dp = dso_local global [18 x [18 x [18 x [18 x [18 x [7 x i32]]]]]] zeroinitializer, align 4
@list = dso_local global [200 x i32] zeroinitializer, align 4
@cns = dso_local global [20 x i32] zeroinitializer, align 4

define dso_local i32 @equal(i32 noundef %0, i32 noundef %1) {
2:
  %3 = icmp eq i32 %0, %1
  br i1 %3, label %4, label %5

4:
  ret i32 1

5:
  ret i32 0

}

define dso_local i32 @dfs(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) {
6:
  %7 = getelementptr [18 x [18 x [18 x [18 x [18 x [7 x i32]]]]]], [18 x [18 x [18 x [18 x [18 x [7 x i32]]]]]]* @dp, i32 0, i32 %0
  %8 = getelementptr [18 x [18 x [18 x [18 x [7 x i32]]]]], [18 x [18 x [18 x [18 x [7 x i32]]]]]* %7, i32 0, i32 %1
  %9 = getelementptr [18 x [18 x [18 x [7 x i32]]]], [18 x [18 x [18 x [7 x i32]]]]* %8, i32 0, i32 %2
  %10 = getelementptr [18 x [18 x [7 x i32]]], [18 x [18 x [7 x i32]]]* %9, i32 0, i32 %3
  %11 = getelementptr [18 x [7 x i32]], [18 x [7 x i32]]* %10, i32 0, i32 %4
  %12 = getelementptr [7 x i32], [7 x i32]* %11, i32 0, i32 %5
  %13 = load i32, i32* %12, align 4
  %14 = icmp ne i32 %13, -1
  br i1 %14, label %15, label %23

15:
  %16 = getelementptr [18 x [18 x [18 x [18 x [18 x [7 x i32]]]]]], [18 x [18 x [18 x [18 x [18 x [7 x i32]]]]]]* @dp, i32 0, i32 %0
  %17 = getelementptr [18 x [18 x [18 x [18 x [7 x i32]]]]], [18 x [18 x [18 x [18 x [7 x i32]]]]]* %16, i32 0, i32 %1
  %18 = getelementptr [18 x [18 x [18 x [7 x i32]]]], [18 x [18 x [18 x [7 x i32]]]]* %17, i32 0, i32 %2
  %19 = getelementptr [18 x [18 x [7 x i32]]], [18 x [18 x [7 x i32]]]* %18, i32 0, i32 %3
  %20 = getelementptr [18 x [7 x i32]], [18 x [7 x i32]]* %19, i32 0, i32 %4
  %21 = getelementptr [7 x i32], [7 x i32]* %20, i32 0, i32 %5
  %22 = load i32, i32* %21, align 4
  ret i32 %22

23:
  %24 = add i32 %0, %1
  %25 = add i32 %24, %2
  %26 = add i32 %25, %3
  %27 = add i32 %26, %4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:
  ret i32 1

30:
  %31 = icmp ne i32 %0, 0
  br i1 %31, label %32, label %40

32:
  %33 = call i32 @equal(i32 noundef %5, i32 noundef 2)
  %34 = sub i32 %0, %33
  %35 = sub i32 %0, 1
  %36 = call i32 @dfs(i32 noundef %35, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef 1)
  %37 = mul i32 %34, %36
  %38 = add i32 0, %37
  %39 = srem i32 %38, 1000000007
  br label %41

40:
  br label %41

41:
  %42 = phi i32 [ 0, %40 ], [ %39, %32 ]
  %43 = icmp ne i32 %1, 0
  br i1 %43, label %44, label %53

44:
  %45 = call i32 @equal(i32 noundef %5, i32 noundef 3)
  %46 = sub i32 %1, %45
  %47 = add i32 %0, 1
  %48 = sub i32 %1, 1
  %49 = call i32 @dfs(i32 noundef %47, i32 noundef %48, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef 2)
  %50 = mul i32 %46, %49
  %51 = add i32 %42, %50
  %52 = srem i32 %51, 1000000007
  br label %54

53:
  br label %54

54:
  %55 = phi i32 [ %42, %53 ], [ %52, %44 ]
  %56 = icmp ne i32 %2, 0
  br i1 %56, label %57, label %66

57:
  %58 = call i32 @equal(i32 noundef %5, i32 noundef 4)
  %59 = sub i32 %2, %58
  %60 = add i32 %1, 1
  %61 = sub i32 %2, 1
  %62 = call i32 @dfs(i32 noundef %0, i32 noundef %60, i32 noundef %61, i32 noundef %3, i32 noundef %4, i32 noundef 3)
  %63 = mul i32 %59, %62
  %64 = add i32 %55, %63
  %65 = srem i32 %64, 1000000007
  br label %67

66:
  br label %67

67:
  %68 = phi i32 [ %55, %66 ], [ %65, %57 ]
  %69 = icmp ne i32 %3, 0
  br i1 %69, label %70, label %79

70:
  %71 = call i32 @equal(i32 noundef %5, i32 noundef 5)
  %72 = sub i32 %3, %71
  %73 = add i32 %2, 1
  %74 = sub i32 %3, 1
  %75 = call i32 @dfs(i32 noundef %0, i32 noundef %1, i32 noundef %73, i32 noundef %74, i32 noundef %4, i32 noundef 4)
  %76 = mul i32 %72, %75
  %77 = add i32 %68, %76
  %78 = srem i32 %77, 1000000007
  br label %80

79:
  br label %80

80:
  %81 = phi i32 [ %68, %79 ], [ %78, %70 ]
  %82 = icmp ne i32 %4, 0
  br i1 %82, label %83, label %90

83:
  %84 = add i32 %3, 1
  %85 = sub i32 %4, 1
  %86 = call i32 @dfs(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %84, i32 noundef %85, i32 noundef 5)
  %87 = mul i32 %4, %86
  %88 = add i32 %81, %87
  %89 = srem i32 %88, 1000000007
  br label %91

90:
  br label %91

91:
  %92 = phi i32 [ %81, %90 ], [ %89, %83 ]
  %93 = getelementptr [18 x [18 x [18 x [18 x [18 x [7 x i32]]]]]], [18 x [18 x [18 x [18 x [18 x [7 x i32]]]]]]* @dp, i32 0, i32 %0
  %94 = getelementptr [18 x [18 x [18 x [18 x [7 x i32]]]]], [18 x [18 x [18 x [18 x [7 x i32]]]]]* %93, i32 0, i32 %1
  %95 = getelementptr [18 x [18 x [18 x [7 x i32]]]], [18 x [18 x [18 x [7 x i32]]]]* %94, i32 0, i32 %2
  %96 = getelementptr [18 x [18 x [7 x i32]]], [18 x [18 x [7 x i32]]]* %95, i32 0, i32 %3
  %97 = getelementptr [18 x [7 x i32]], [18 x [7 x i32]]* %96, i32 0, i32 %4
  %98 = getelementptr [7 x i32], [7 x i32]* %97, i32 0, i32 %5
  %99 = srem i32 %92, 1000000007
  store i32 %99, i32* %98, align 4
  %100 = getelementptr [18 x [18 x [18 x [18 x [18 x [7 x i32]]]]]], [18 x [18 x [18 x [18 x [18 x [7 x i32]]]]]]* @dp, i32 0, i32 %0
  %101 = getelementptr [18 x [18 x [18 x [18 x [7 x i32]]]]], [18 x [18 x [18 x [18 x [7 x i32]]]]]* %100, i32 0, i32 %1
  %102 = getelementptr [18 x [18 x [18 x [7 x i32]]]], [18 x [18 x [18 x [7 x i32]]]]* %101, i32 0, i32 %2
  %103 = getelementptr [18 x [18 x [7 x i32]]], [18 x [18 x [7 x i32]]]* %102, i32 0, i32 %3
  %104 = getelementptr [18 x [7 x i32]], [18 x [7 x i32]]* %103, i32 0, i32 %4
  %105 = getelementptr [7 x i32], [7 x i32]* %104, i32 0, i32 %5
  %106 = load i32, i32* %105, align 4
  ret i32 %106

}

define dso_local i32 @main() {
0:
  %1 = call i32 @getint()
  br label %2

2:
  %3 = phi i32 [ 0, %0 ], [ %42, %41 ]
  %4 = icmp slt i32 %3, 18
  br i1 %4, label %5, label %43

5:
  br label %6

6:
  %7 = phi i32 [ 0, %5 ], [ %40, %39 ]
  %8 = icmp slt i32 %7, 18
  br i1 %8, label %9, label %41

9:
  br label %10

10:
  %11 = phi i32 [ 0, %9 ], [ %38, %37 ]
  %12 = icmp slt i32 %11, 18
  br i1 %12, label %13, label %39

13:
  br label %14

14:
  %15 = phi i32 [ 0, %13 ], [ %36, %35 ]
  %16 = icmp slt i32 %15, 18
  br i1 %16, label %17, label %37

17:
  br label %18

18:
  %19 = phi i32 [ 0, %17 ], [ %34, %33 ]
  %20 = icmp slt i32 %19, 18
  br i1 %20, label %21, label %35

21:
  br label %22

22:
  %23 = phi i32 [ 0, %21 ], [ %32, %25 ]
  %24 = icmp slt i32 %23, 7
  br i1 %24, label %25, label %33

25:
  %26 = getelementptr [18 x [18 x [18 x [18 x [18 x [7 x i32]]]]]], [18 x [18 x [18 x [18 x [18 x [7 x i32]]]]]]* @dp, i32 0, i32 %3
  %27 = getelementptr [18 x [18 x [18 x [18 x [7 x i32]]]]], [18 x [18 x [18 x [18 x [7 x i32]]]]]* %26, i32 0, i32 %7
  %28 = getelementptr [18 x [18 x [18 x [7 x i32]]]], [18 x [18 x [18 x [7 x i32]]]]* %27, i32 0, i32 %11
  %29 = getelementptr [18 x [18 x [7 x i32]]], [18 x [18 x [7 x i32]]]* %28, i32 0, i32 %15
  %30 = getelementptr [18 x [7 x i32]], [18 x [7 x i32]]* %29, i32 0, i32 %19
  %31 = getelementptr [7 x i32], [7 x i32]* %30, i32 0, i32 %23
  store i32 -1, i32* %31, align 4
  %32 = add i32 %23, 1
  br label %22

33:
  %34 = add i32 %19, 1
  br label %18

35:
  %36 = add i32 %15, 1
  br label %14

37:
  %38 = add i32 %11, 1
  br label %10

39:
  %40 = add i32 %7, 1
  br label %6

41:
  %42 = add i32 %3, 1
  br label %2

43:
  br label %44

44:
  %45 = phi i32 [ 0, %43 ], [ %58, %47 ]
  %46 = icmp slt i32 %45, %1
  br i1 %46, label %47, label %59

47:
  %48 = getelementptr [200 x i32], [200 x i32]* @list, i32 0, i32 %45
  %49 = call i32 @getint()
  store i32 %49, i32* %48, align 4
  %50 = getelementptr [200 x i32], [200 x i32]* @list, i32 0, i32 %45
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr [20 x i32], [20 x i32]* @cns, i32 0, i32 %51
  %53 = getelementptr [200 x i32], [200 x i32]* @list, i32 0, i32 %45
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr [20 x i32], [20 x i32]* @cns, i32 0, i32 %54
  %56 = load i32, i32* %55, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %52, align 4
  %58 = add i32 %45, 1
  br label %44

59:
  %60 = getelementptr [20 x i32], [20 x i32]* @cns, i32 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr [20 x i32], [20 x i32]* @cns, i32 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr [20 x i32], [20 x i32]* @cns, i32 0, i32 3
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr [20 x i32], [20 x i32]* @cns, i32 0, i32 4
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr [20 x i32], [20 x i32]* @cns, i32 0, i32 5
  %69 = load i32, i32* %68, align 4
  %70 = call i32 @dfs(i32 noundef %61, i32 noundef %63, i32 noundef %65, i32 noundef %67, i32 noundef %69, i32 noundef 0)
  call void @putint(i32 noundef %70)
  ret i32 %70

}

declare i32 @getint()
declare void @putint(i32 noundef)

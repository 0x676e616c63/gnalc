; Module: ../test/custom/32-ggctest.c

@a = dso_local global [30000010 x i32] zeroinitializer, align 4
@ans = dso_local global i32 0, align 4

define dso_local i32 @getMaxNum(i32 noundef %%__GNALC_IR_TEMP_NAME, i32* noundef %%__GNALC_IR_TEMP_NAME) {
entry:
  %%__GNALC_IR_TEMP_NAME = alloca i32, align 4
  %%__GNALC_IR_TEMP_NAME = alloca i32*, align 4
  %%__GNALC_IR_TEMP_NAME = alloca i32, align 4
  %%__GNALC_IR_TEMP_NAME = alloca i32, align 4
  store i32 %%__GNALC_IR_TEMP_NAME, i32* %%__GNALC_IR_TEMP_NAME, align 4
  store i32* %%__GNALC_IR_TEMP_NAME, i32** %%__GNALC_IR_TEMP_NAME, align 4
  store i32 0, i32* %%__GNALC_IR_TEMP_NAME, align 4
  store i32 0, i32* %%__GNALC_IR_TEMP_NAME, align 4
  br label %while.cond

while.cond:
  %%__GNALC_IR_TEMP_NAME = load i32, i32* %%__GNALC_IR_TEMP_NAME, align 4
  %%__GNALC_IR_TEMP_NAME = load i32, i32* %%__GNALC_IR_TEMP_NAME, align 4
  %%__GNALC_IR_TEMP_NAME = icmp slt i32 %%__GNALC_IR_TEMP_NAME, %%__GNALC_IR_TEMP_NAME
  br i1 %%__GNALC_IR_TEMP_NAME, label %while.body, label %while.end

while.body:
  %%__GNALC_IR_TEMP_NAME = load i32*, i32** %%__GNALC_IR_TEMP_NAME, align 4
  %%__GNALC_IR_TEMP_NAME = load i32, i32* %%__GNALC_IR_TEMP_NAME, align 4
  %%__GNALC_IR_TEMP_NAME = getelementptr i32, i32* %%__GNALC_IR_TEMP_NAME, i32 %%__GNALC_IR_TEMP_NAME
  %%__GNALC_IR_TEMP_NAME = load i32, i32* %%__GNALC_IR_TEMP_NAME, align 4
  %%__GNALC_IR_TEMP_NAME = load i32, i32* %%__GNALC_IR_TEMP_NAME, align 4
  %%__GNALC_IR_TEMP_NAME = icmp sgt i32 %%__GNALC_IR_TEMP_NAME, %%__GNALC_IR_TEMP_NAME
  br i1 %%__GNALC_IR_TEMP_NAME, label %if.then, label %if.end

if.then:
  %%__GNALC_IR_TEMP_NAME = load i32*, i32** %%__GNALC_IR_TEMP_NAME, align 4
  %%__GNALC_IR_TEMP_NAME = load i32, i32* %%__GNALC_IR_TEMP_NAME, align 4
  %%__GNALC_IR_TEMP_NAME = getelementptr i32, i32* %%__GNALC_IR_TEMP_NAME, i32 %%__GNALC_IR_TEMP_NAME
  %%__GNALC_IR_TEMP_NAME = load i32, i32* %%__GNALC_IR_TEMP_NAME, align 4
  store i32 %%__GNALC_IR_TEMP_NAME, i32* %%__GNALC_IR_TEMP_NAME, align 4
  br label %if.end

if.end:
  %%__GNALC_IR_TEMP_NAME = load i32, i32* %%__GNALC_IR_TEMP_NAME, align 4
  %%__GNALC_IR_TEMP_NAME = add i32 %%__GNALC_IR_TEMP_NAME, 1
  store i32 %%__GNALC_IR_TEMP_NAME, i32* %%__GNALC_IR_TEMP_NAME, align 4
  br label %while.cond

while.end:
  %%__GNALC_IR_TEMP_NAME = load i32, i32* %%__GNALC_IR_TEMP_NAME, align 4
  ret i32 %%__GNALC_IR_TEMP_NAME

}

define dso_local i32 @getNumPos(i32 noundef %0, i32 noundef %1) {
2:
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  store i32 1, i32* %5, align 4
  store i32 0, i32* %6, align 4
  br label %7

7:
  %8 = load i32, i32* %6, align 4
  %9 = load i32, i32* %4, align 4
  %10 = icmp slt i32 %8, %9
  br i1 %10, label %11, label %16

11:
  %12 = load i32, i32* %3, align 4
  %13 = sdiv i32 %12, 16
  store i32 %13, i32* %3, align 4
  %14 = load i32, i32* %6, align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* %6, align 4
  br label %7

16:
  %17 = load i32, i32* %3, align 4
  %18 = srem i32 %17, 16
  ret i32 %18

}

define dso_local void @radixSort(i32 noundef %0, i32* noundef %1, i32 noundef %2, i32 noundef %3) {
4:
  %5 = alloca i32, align 4
  %6 = alloca i32*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [16 x i32], align 4
  %10 = alloca [16 x i32], align 4
  %11 = alloca [16 x i32], align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  store i32* %1, i32** %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %16 = bitcast [16 x i32]* %9 to i8*
  call void @llvm.memset.p0i8.i32(i8* noundef %16, i8 noundef 0, i32 noundef 64, i1 noundef 0)
  %17 = bitcast [16 x i32]* %10 to i8*
  call void @llvm.memset.p0i8.i32(i8* noundef %17, i8 noundef 0, i32 noundef 64, i1 noundef 0)
  %18 = bitcast [16 x i32]* %11 to i8*
  call void @llvm.memset.p0i8.i32(i8* noundef %18, i8 noundef 0, i32 noundef 64, i1 noundef 0)
  %19 = load i32, i32* %5, align 4
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %26, label %21

21:
  %22 = load i32, i32* %7, align 4
  %23 = add i32 %22, 1
  %24 = load i32, i32* %8, align 4
  %25 = icmp sge i32 %23, %24
  br i1 %25, label %27, label %29

26:
  br label %28

27:
  br label %28

28:
  ret void

29:
  %30 = load i32, i32* %7, align 4
  store i32 %30, i32* %12, align 4
  br label %31

31:
  %32 = load i32, i32* %12, align 4
  %33 = load i32, i32* %8, align 4
  %34 = icmp slt i32 %32, %33
  br i1 %34, label %35, label %54

35:
  %36 = load i32*, i32** %6, align 4
  %37 = load i32, i32* %12, align 4
  %38 = getelementptr i32, i32* %36, i32 %37
  %39 = load i32, i32* %38, align 4
  %40 = load i32, i32* %5, align 4
  %41 = call i32 @getNumPos(i32 noundef %39, i32 noundef %40)
  %42 = getelementptr [16 x i32], [16 x i32]* %11, i32 0, i32 %41
  %43 = load i32*, i32** %6, align 4
  %44 = load i32, i32* %12, align 4
  %45 = getelementptr i32, i32* %43, i32 %44
  %46 = load i32, i32* %45, align 4
  %47 = load i32, i32* %5, align 4
  %48 = call i32 @getNumPos(i32 noundef %46, i32 noundef %47)
  %49 = getelementptr [16 x i32], [16 x i32]* %11, i32 0, i32 %48
  %50 = load i32, i32* %49, align 4
  %51 = add i32 %50, 1
  store i32 %51, i32* %42, align 4
  %52 = load i32, i32* %12, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %12, align 4
  br label %31

54:
  %55 = getelementptr [16 x i32], [16 x i32]* %9, i32 0, i32 0
  %56 = load i32, i32* %7, align 4
  store i32 %56, i32* %55, align 4
  %57 = getelementptr [16 x i32], [16 x i32]* %10, i32 0, i32 0
  %58 = load i32, i32* %7, align 4
  %59 = getelementptr [16 x i32], [16 x i32]* %11, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = add i32 %58, %60
  store i32 %61, i32* %57, align 4
  store i32 1, i32* %12, align 4
  br label %62

62:
  %63 = load i32, i32* %12, align 4
  %64 = icmp slt i32 %63, 16
  br i1 %64, label %65, label %83

65:
  %66 = load i32, i32* %12, align 4
  %67 = getelementptr [16 x i32], [16 x i32]* %9, i32 0, i32 %66
  %68 = load i32, i32* %12, align 4
  %69 = sub i32 %68, 1
  %70 = getelementptr [16 x i32], [16 x i32]* %10, i32 0, i32 %69
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %67, align 4
  %72 = load i32, i32* %12, align 4
  %73 = getelementptr [16 x i32], [16 x i32]* %10, i32 0, i32 %72
  %74 = load i32, i32* %12, align 4
  %75 = getelementptr [16 x i32], [16 x i32]* %9, i32 0, i32 %74
  %76 = load i32, i32* %75, align 4
  %77 = load i32, i32* %12, align 4
  %78 = getelementptr [16 x i32], [16 x i32]* %11, i32 0, i32 %77
  %79 = load i32, i32* %78, align 4
  %80 = add i32 %76, %79
  store i32 %80, i32* %73, align 4
  %81 = load i32, i32* %12, align 4
  %82 = add i32 %81, 1
  store i32 %82, i32* %12, align 4
  br label %62

83:
  store i32 0, i32* %12, align 4
  br label %84

84:
  %85 = load i32, i32* %12, align 4
  %86 = icmp slt i32 %85, 16
  br i1 %86, label %87, label %153

87:
  br label %88

88:
  %89 = load i32, i32* %12, align 4
  %90 = getelementptr [16 x i32], [16 x i32]* %9, i32 0, i32 %89
  %91 = load i32, i32* %90, align 4
  %92 = load i32, i32* %12, align 4
  %93 = getelementptr [16 x i32], [16 x i32]* %10, i32 0, i32 %92
  %94 = load i32, i32* %93, align 4
  %95 = icmp slt i32 %91, %94
  br i1 %95, label %96, label %150

96:
  %97 = load i32*, i32** %6, align 4
  %98 = load i32, i32* %12, align 4
  %99 = getelementptr [16 x i32], [16 x i32]* %9, i32 0, i32 %98
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr i32, i32* %97, i32 %100
  %102 = load i32, i32* %101, align 4
  store i32 %102, i32* %13, align 4
  br label %103

103:
  %104 = load i32, i32* %13, align 4
  %105 = load i32, i32* %5, align 4
  %106 = call i32 @getNumPos(i32 noundef %104, i32 noundef %105)
  %107 = load i32, i32* %12, align 4
  %108 = icmp ne i32 %106, %107
  br i1 %108, label %109, label %137

109:
  %110 = load i32, i32* %13, align 4
  store i32 %110, i32* %14, align 4
  %111 = load i32*, i32** %6, align 4
  %112 = load i32, i32* %14, align 4
  %113 = load i32, i32* %5, align 4
  %114 = call i32 @getNumPos(i32 noundef %112, i32 noundef %113)
  %115 = getelementptr [16 x i32], [16 x i32]* %9, i32 0, i32 %114
  %116 = load i32, i32* %115, align 4
  %117 = getelementptr i32, i32* %111, i32 %116
  %118 = load i32, i32* %117, align 4
  store i32 %118, i32* %13, align 4
  %119 = load i32*, i32** %6, align 4
  %120 = load i32, i32* %14, align 4
  %121 = load i32, i32* %5, align 4
  %122 = call i32 @getNumPos(i32 noundef %120, i32 noundef %121)
  %123 = getelementptr [16 x i32], [16 x i32]* %9, i32 0, i32 %122
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr i32, i32* %119, i32 %124
  %126 = load i32, i32* %14, align 4
  store i32 %126, i32* %125, align 4
  %127 = load i32, i32* %14, align 4
  %128 = load i32, i32* %5, align 4
  %129 = call i32 @getNumPos(i32 noundef %127, i32 noundef %128)
  %130 = getelementptr [16 x i32], [16 x i32]* %9, i32 0, i32 %129
  %131 = load i32, i32* %14, align 4
  %132 = load i32, i32* %5, align 4
  %133 = call i32 @getNumPos(i32 noundef %131, i32 noundef %132)
  %134 = getelementptr [16 x i32], [16 x i32]* %9, i32 0, i32 %133
  %135 = load i32, i32* %134, align 4
  %136 = add i32 %135, 1
  store i32 %136, i32* %130, align 4
  br label %103

137:
  %138 = load i32*, i32** %6, align 4
  %139 = load i32, i32* %12, align 4
  %140 = getelementptr [16 x i32], [16 x i32]* %9, i32 0, i32 %139
  %141 = load i32, i32* %140, align 4
  %142 = getelementptr i32, i32* %138, i32 %141
  %143 = load i32, i32* %13, align 4
  store i32 %143, i32* %142, align 4
  %144 = load i32, i32* %12, align 4
  %145 = getelementptr [16 x i32], [16 x i32]* %9, i32 0, i32 %144
  %146 = load i32, i32* %12, align 4
  %147 = getelementptr [16 x i32], [16 x i32]* %9, i32 0, i32 %146
  %148 = load i32, i32* %147, align 4
  %149 = add i32 %148, 1
  store i32 %149, i32* %145, align 4
  br label %88

150:
  %151 = load i32, i32* %12, align 4
  %152 = add i32 %151, 1
  store i32 %152, i32* %12, align 4
  br label %84

153:
  %154 = load i32, i32* %7, align 4
  store i32 %154, i32* %15, align 4
  %155 = getelementptr [16 x i32], [16 x i32]* %9, i32 0, i32 0
  %156 = load i32, i32* %7, align 4
  store i32 %156, i32* %155, align 4
  %157 = getelementptr [16 x i32], [16 x i32]* %10, i32 0, i32 0
  %158 = load i32, i32* %7, align 4
  %159 = getelementptr [16 x i32], [16 x i32]* %11, i32 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = add i32 %158, %160
  store i32 %161, i32* %157, align 4
  store i32 0, i32* %15, align 4
  br label %162

162:
  %163 = load i32, i32* %15, align 4
  %164 = icmp slt i32 %163, 16
  br i1 %164, label %165, label %197

165:
  %166 = load i32, i32* %15, align 4
  %167 = icmp sgt i32 %166, 0
  br i1 %167, label %168, label %184

168:
  %169 = load i32, i32* %15, align 4
  %170 = getelementptr [16 x i32], [16 x i32]* %9, i32 0, i32 %169
  %171 = load i32, i32* %15, align 4
  %172 = sub i32 %171, 1
  %173 = getelementptr [16 x i32], [16 x i32]* %10, i32 0, i32 %172
  %174 = load i32, i32* %173, align 4
  store i32 %174, i32* %170, align 4
  %175 = load i32, i32* %15, align 4
  %176 = getelementptr [16 x i32], [16 x i32]* %10, i32 0, i32 %175
  %177 = load i32, i32* %15, align 4
  %178 = getelementptr [16 x i32], [16 x i32]* %9, i32 0, i32 %177
  %179 = load i32, i32* %178, align 4
  %180 = load i32, i32* %15, align 4
  %181 = getelementptr [16 x i32], [16 x i32]* %11, i32 0, i32 %180
  %182 = load i32, i32* %181, align 4
  %183 = add i32 %179, %182
  store i32 %183, i32* %176, align 4
  br label %185

184:
  br label %185

185:
  %186 = load i32, i32* %5, align 4
  %187 = sub i32 %186, 1
  %188 = load i32*, i32** %6, align 4
  %189 = load i32, i32* %15, align 4
  %190 = getelementptr [16 x i32], [16 x i32]* %9, i32 0, i32 %189
  %191 = load i32, i32* %190, align 4
  %192 = load i32, i32* %15, align 4
  %193 = getelementptr [16 x i32], [16 x i32]* %10, i32 0, i32 %192
  %194 = load i32, i32* %193, align 4
  call void @radixSort(i32 noundef %187, i32* noundef %188, i32 noundef %191, i32 noundef %194)
  %195 = load i32, i32* %15, align 4
  %196 = add i32 %195, 1
  store i32 %196, i32* %15, align 4
  br label %162

197:
  ret void

}

define dso_local i32 @main() {
0:
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = getelementptr [30000010 x i32], [30000010 x i32]* @a, i32 0, i32 0
  %4 = call i32 @getarray(i32* noundef %3)
  store i32 %4, i32* %1, align 4
  call void @_sysy_starttime(i32 noundef 90)
  %5 = load i32, i32* %1, align 4
  %6 = getelementptr [30000010 x i32], [30000010 x i32]* @a, i32 0, i32 0
  call void @radixSort(i32 noundef 8, i32* noundef %6, i32 noundef 0, i32 noundef %5)
  store i32 0, i32* %2, align 4
  br label %7

7:
  %8 = load i32, i32* %2, align 4
  %9 = load i32, i32* %1, align 4
  %10 = icmp slt i32 %8, %9
  br i1 %10, label %11, label %24

11:
  %12 = load i32, i32* @ans, align 4
  %13 = load i32, i32* %2, align 4
  %14 = load i32, i32* %2, align 4
  %15 = getelementptr [30000010 x i32], [30000010 x i32]* @a, i32 0, i32 %14
  %16 = load i32, i32* %15, align 4
  %17 = load i32, i32* %2, align 4
  %18 = add i32 2, %17
  %19 = srem i32 %16, %18
  %20 = mul i32 %13, %19
  %21 = add i32 %12, %20
  store i32 %21, i32* @ans, align 4
  %22 = load i32, i32* %2, align 4
  %23 = add i32 %22, 1
  store i32 %23, i32* %2, align 4
  br label %7

24:
  %25 = load i32, i32* @ans, align 4
  %26 = icmp slt i32 %25, 0
  br i1 %26, label %27, label %30

27:
  %28 = load i32, i32* @ans, align 4
  %29 = sub i32 0, %28
  store i32 %29, i32* @ans, align 4
  br label %31

30:
  br label %31

31:
  call void @_sysy_stoptime(i32 noundef 102)
  %32 = load i32, i32* @ans, align 4
  call void @putint(i32 noundef %32)
  call void @putch(i32 noundef 10)
  ret i32 0

}

declare i32 @getarray(i32* noundef)
declare void @putint(i32 noundef)
declare void @putch(i32 noundef)
declare void @_sysy_starttime(i32 noundef)
declare void @_sysy_stoptime(i32 noundef)
declare void @llvm.memset.p0i8.i32(i8* noundef, i8 noundef, i32 noundef, i1 noundef)

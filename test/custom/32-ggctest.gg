; Module: ./gnalc_test_temp/2025-03-25_16:44:02/functional/58_sort_test4_gnalc_test.new.sy

@n = dso_local global i32 0, align 4

define dso_local i32 @select_sort(i32* noundef %0, i32 noundef %1) {
2:
  %3 = alloca i32*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32* %0, i32** %3, align 4
  store i32 %1, i32* %4, align 4
  store i32 0, i32* %5, align 4
  br label %9

9:
  %10 = load i32, i32* %5, align 4
  %11 = load i32, i32* %4, align 4
  %12 = sub i32 %11, 1
  %13 = icmp slt i32 %10, %12
  br i1 %13, label %14, label %62

14:
  %15 = load i32, i32* %5, align 4
  store i32 %15, i32* %7, align 4
  %16 = load i32, i32* %5, align 4
  %17 = add i32 %16, 1
  store i32 %17, i32* %6, align 4
  br label %18

18:
  %19 = load i32, i32* %6, align 4
  %20 = load i32, i32* %4, align 4
  %21 = icmp slt i32 %19, %20
  br i1 %21, label %22, label %38

22:
  %23 = load i32*, i32** %3, align 4
  %24 = load i32, i32* %7, align 4
  %25 = getelementptr i32, i32* %23, i32 %24
  %26 = load i32, i32* %25, align 4
  %27 = load i32*, i32** %3, align 4
  %28 = load i32, i32* %6, align 4
  %29 = getelementptr i32, i32* %27, i32 %28
  %30 = load i32, i32* %29, align 4
  %31 = icmp sgt i32 %26, %30
  br i1 %31, label %32, label %34

32:
  %33 = load i32, i32* %6, align 4
  store i32 %33, i32* %7, align 4
  br label %35

34:
  br label %35

35:
  %36 = load i32, i32* %6, align 4
  %37 = add i32 %36, 1
  store i32 %37, i32* %6, align 4
  br label %18

38:
  %39 = load i32, i32* %7, align 4
  %40 = load i32, i32* %5, align 4
  %41 = icmp ne i32 %39, %40
  br i1 %41, label %42, label %58

42:
  %43 = load i32*, i32** %3, align 4
  %44 = load i32, i32* %7, align 4
  %45 = getelementptr i32, i32* %43, i32 %44
  %46 = load i32, i32* %45, align 4
  store i32 %46, i32* %8, align 4
  %47 = load i32*, i32** %3, align 4
  %48 = load i32, i32* %7, align 4
  %49 = getelementptr i32, i32* %47, i32 %48
  %50 = load i32*, i32** %3, align 4
  %51 = load i32, i32* %5, align 4
  %52 = getelementptr i32, i32* %50, i32 %51
  %53 = load i32, i32* %52, align 4
  store i32 %53, i32* %49, align 4
  %54 = load i32*, i32** %3, align 4
  %55 = load i32, i32* %5, align 4
  %56 = getelementptr i32, i32* %54, i32 %55
  %57 = load i32, i32* %8, align 4
  store i32 %57, i32* %56, align 4
  br label %59

58:
  br label %59

59:
  %60 = load i32, i32* %5, align 4
  %61 = add i32 %60, 1
  store i32 %61, i32* %5, align 4
  br label %9

62:
  ret i32 0

}

define dso_local i32 @main() {
0:
  %1 = alloca [10 x i32], align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 10, i32* @n, align 4
  %4 = getelementptr [10 x i32], [10 x i32]* %1, i32 0, i32 0
  store i32 4, i32* %4, align 4
  %5 = getelementptr [10 x i32], [10 x i32]* %1, i32 0, i32 1
  store i32 3, i32* %5, align 4
  %6 = getelementptr [10 x i32], [10 x i32]* %1, i32 0, i32 2
  store i32 9, i32* %6, align 4
  %7 = getelementptr [10 x i32], [10 x i32]* %1, i32 0, i32 3
  store i32 2, i32* %7, align 4
  %8 = getelementptr [10 x i32], [10 x i32]* %1, i32 0, i32 4
  store i32 0, i32* %8, align 4
  %9 = getelementptr [10 x i32], [10 x i32]* %1, i32 0, i32 5
  store i32 1, i32* %9, align 4
  %10 = getelementptr [10 x i32], [10 x i32]* %1, i32 0, i32 6
  store i32 6, i32* %10, align 4
  %11 = getelementptr [10 x i32], [10 x i32]* %1, i32 0, i32 7
  store i32 5, i32* %11, align 4
  %12 = getelementptr [10 x i32], [10 x i32]* %1, i32 0, i32 8
  store i32 7, i32* %12, align 4
  %13 = getelementptr [10 x i32], [10 x i32]* %1, i32 0, i32 9
  store i32 8, i32* %13, align 4
  store i32 0, i32* %2, align 4
  %14 = load i32, i32* @n, align 4
  %15 = getelementptr [10 x i32], [10 x i32]* %1, i32 0, i32 0
  %16 = call i32 @select_sort(i32* noundef %15, i32 noundef %14)
  store i32 %16, i32* %2, align 4
  br label %17

17:
  %18 = load i32, i32* %2, align 4
  %19 = load i32, i32* @n, align 4
  %20 = icmp slt i32 %18, %19
  br i1 %20, label %21, label %29

21:
  %22 = load i32, i32* %2, align 4
  %23 = getelementptr [10 x i32], [10 x i32]* %1, i32 0, i32 %22
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %3, align 4
  %25 = load i32, i32* %3, align 4
  call void @putint(i32 noundef %25)
  store i32 10, i32* %3, align 4
  %26 = load i32, i32* %3, align 4
  call void @putch(i32 noundef %26)
  %27 = load i32, i32* %2, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %2, align 4
  br label %17

29:
  ret i32 0

}

declare void @putint(i32 noundef)
declare void @putch(i32 noundef)
